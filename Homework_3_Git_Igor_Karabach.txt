GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.


Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal. === Homework_3_Git_Igor_Karabach.txt
 2. Сценарий перенесите в этот файл. === CTRL+C -> CTRL+V
 3. На против каждого действия - напишите команду в GitBash === OK

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.  === https://github.com/IgorKarabach

JSON
 4. Создать внешний репозиторий c названием JSON. === https://github.com/IgorKarabach/JSON
 5. Клонировать репозиторий JSON на локальный компьютер. === git clone https://github.com/IgorKarabach/JSON.git
 6. Внутри локального JSON создать файл “new.json”. === cd JSON --> touch new.json
 7. Добавить файл под гит. === git add new.json
 8. Закоммитить файл. === git commit -m "add new.json file"
 9. Отправить файл на внешний GitHub репозиторий. === git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.  === vim new.json -->
{

        "name": "Karabach_Igor_Andreevich",

        "age": 33,

        "number_of_pets": 0,

        "future_desired_salary": 2000

}

 11. Отправить изменения на внешний репозиторий.  === git add new.json --> git commit -m "edit new.json file" --> git push
 12. Создать файл preferences.json === touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON. === vim preferences.json
{

        "favorite_film": "Running Scared",

        "favorite_serial": "Money Heist",

        "favorite_food": "pizza",

        "favorite_season": "winter",

        "favorite_country": "USA"

}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON === cat > sklls.json -->
{

        "learned_skills": [

                "JSON",

                "XML",

                "Postman",

                "Charles",

                "Fiddler",

                "Dev_Tools",

                "VPN",

                "Mobile_Testing",

                "Xcode",

                "Android_Studio",

                "ADB",

                "Git",

                "Git_Bash",

                "SQL",

                "Postgres",

                "Redis",

                "Jmeter",

                "Python"

        ]

}

 15. Отправить сразу 2 файла на внешний репозиторий. === git add . --> git commit -m "add 2 *.json files" --> git push
 16. На веб интерфейсе создать файл bug_report.json. === press button "Add file" --> press button Create new file: "bug_report.json"
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. === press button "Commit changes"
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. === press button "Edit this file" -->
{

	"ID": "BRST0921-184",
	
	"Title": "Recipes come up twice in popup window by double-clicking on them in the Andriod app",
	
	"Type": "Bug",
	
	"Status": "To Do",
	
	"Priority": "Minor",
	
	"Resolution": "Unresolved",
	
	"Environment": "Samsung Galaxy A50 SM-A505F Android 11, Mobile app ver. 21.2.2"
	
	"Description": [
		
		{
	
			"Precondition": [
	
				"1. Open Prepear mobile app",
	
				"2. Sign In with correct data"
	
			]
	
		},
  
		{
  
			"Steps": [
	
				"1. Click on the "Recipes" button",
		
				"2. Double-click on the any Recipe image",
			
				"3. Click on the "<" button",
		
				"4. Double-click on the Next Recipe image",
		
				"5. Click on the "<" button",
		
			]
	
		},
  
		{
  
			"Actual result": "Recipes come up twice in the popup window by double-clicking on them in the Andriod app"
	
		},

		{

			"Expected result": "One recipes should appear in a popup window after double clicking in the Andriod app "
	
		}

	],
  
	"Attachments": {img},
  
	"Reporter": "Igor Karabach",
  
	"Assignee": "Darya Khvahina"
  
}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. === press button "Commit changes"
 20. Синхронизировать внешний и локальный репозиторий JSON  === git fetch --> git pull


XML
 21. Создать внешний репозиторий c названием XML. === https://github.com/IgorKarabach/XML
 22. Клонировать репозиторий XML на локальный компьютер. === git clone https://github.com/IgorKarabach/XML.git
 23. Внутри локального XML создать файл “new.xml”. === cd XML --> touch new.xml
 24. Добавить файл под гит. === git add new.xml
 25. Закоммитить файл. === git commit -m "add new.xml"
 26. Отправить файл на внешний GitHub репозиторий. === git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 28. Отправить изменения на внешний репозиторий.
 29. Создать файл preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 32. Сделать коммит в одну строку.
 33. Отправить сразу 2 файла на внешний репозиторий.
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML

TXT
 1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер.
 3. Внутри локального TXT создать файл “new.txt”.
 4. Добавить файл под гит.
 5. Закоммитить файл.
 6. Отправить файл на внешний GitHub репозиторий.
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
 8. Отправить изменения на внешний репозиторий.
 9. Создать файл preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
 12. Сделать коммит в одну строку.
 13. Отправить сразу 2 файла на внешний репозиторий.
 14. На веб интерфейсе создать файл bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT
